wolves %>%
filter(sex!="NA") %>%
count(pop) %>%
ggplot(aes(x = sex, y = input$y)) +
geom_bar() +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("y", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x = sex, y = input$y)) +
geom_bar() +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("pop", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x = sex, y = input$y)) +
geom_bar() +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x = sex)) +
geom_bar() +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x = sex, fill = sex)) +
geom_bar() +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x = sex, y= pop, fill = sex)) +
geom_bar() +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point() +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
selected_wolves <- reactive({
wolves %>% filter(pop == input$population)
output$plot <- renderPlot({
ggplot(selected_wolves(), aes(x = sex, fill = sex)) +
geom_bar() +
labs(title = input$population)
})
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(wolves, aes_string(x = sex, y = input$y, fill=sex)) +
geom_col() +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(wolves, aes_string(x = "sex", y = input$y, fill=sex)) +
geom_col() +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(wolves, aes(x = "sex", y = input$y, fill=sex)) +
geom_col() +
theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
wolves
wolves %>%
count(pop)
wolves %>%
count(sex$pop)
wolves %>%
count(sex)
wolves %>%
group_by(pop)
count(sex) %>%
wolves %>%
group_by(pop) %>%
count(sex)
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_col()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("x", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
ggplot(aes(x=sex, fill=sex)) +
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("pop", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
ggplot(aes(x=sex, y= input$y, fill=sex)) +
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("y", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
ggplot(aes(x=sex, y= input$y, fill=sex)) +
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "sex")
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n")
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("y", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n") %>%
ggplot(aes(x=sex, y= input$y, fill=sex)) +
geom_bar()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("y", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n") %>%
ggplot(aes(x=sex, y=input$y, fill=sex)) +
geom_col()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("y", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n") %>%
ggplot(aes(x=sex, fill=sex)) +
geom_col()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("y", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n") %>%
ggplot(aes(x=sex, fill=sex)) +
geom_col()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("y", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n") %>%
ggplot(aes(x=sex, y=input$y, fill=sex)) +
geom_col()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Wolves Sex Composition by Population"),
dashboardSidebar(disable=T),
dashboardBody(
selectInput("y", "Select Population", choices = c("AK.PEN", "BAN.JAS", "BC", "DENALI", "ELLES", "GTNP", "INT.AK", "MEXICAN","MI","MT", "N.NWT", "ONT",
"SE.AK", "SNF", "SS.NWT", "YNP", "YUCH"),
selected = "AK.PEN"),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
output$plot <- renderPlot({
wolves %>%
group_by(pop) %>%
filter(sex !="NA") %>%
count(sex) %>%
pivot_wider(names_from = "pop",
values_from = "n") %>%
ggplot(aes(x=sex, fill=input$y)) +
geom_col()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
